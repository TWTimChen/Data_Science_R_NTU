}
}
print(paste(a_count, 'A, ', b_count, 'B'))
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
#while(1){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
#while(1){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
#while(1){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
#while(1){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
flag <- TRUE
if(flag){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
if(a_count == 4 && b_count == 0){
flag <<- FALSE
}
a_count <<- 0
b_count <<- 0
}
f
print(flag)
flag <- TRUE
if(flag){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
if(a_count == 4 && b_count == 0){
flag <<- FALSE
}
a_count <<- 0
b_count <<- 0
print(flag)
}
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
flag <- TRUE
while(flag){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
if(a_count == 4 && b_count == 0){
flag <<- FALSE
}
a_count <<- 0
b_count <<- 0
print(flag)
}
0
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
while(flag){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
if(a_count == 4 && b_count == 0){
flag <<- FALSE
}
a_count <<- 0
b_count <<- 0
print(flag)
}
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
flag <- TRUE
while(flag){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
if(a_count == 4 && b_count == 0){
flag <<- FALSE
}
a_count <<- 0
b_count <<- 0
print(flag)
}
print(paste("你總共輸入了: ", counter))
counter <- 0
input_number_string <- ''
a_count <- 0
b_count <- 0
random_number <- sample(0:9, 4)
for(a in random_number){
print(a)
}
readInput <- function(){
n <- readline(prompt = "請輸入猜測數字：")
counter <<- counter + 1
input_number <<- n
return(input_number)
}
flag <- TRUE
while(flag){
readInput()
input_number_1 <- strtoi(substr(input_number, start = 1, stop = 1))
input_number_2 <- strtoi(substr(input_number, start = 2, stop = 2))
input_number_3 <- strtoi(substr(input_number, start = 3, stop = 3))
input_number_4 <- strtoi(substr(input_number, start = 4, stop = 4))
user_input_list <- c(input_number_1, input_number_2, input_number_3, input_number_4)
#first find how many a
user_input_list
for(a in 1:4){
if(random_number[a] == user_input_list[a]){
a_count <- a_count + 1
}
for(b in 1:4){
if(a == b){
next
}
if(user_input_list[a] == random_number[b]){
b_count <- b_count + 1
}
}
}
print(paste(a_count, 'A, ', b_count, 'B'))
if(a_count == 4 && b_count == 0){
flag <<- FALSE
}
a_count <<- 0
b_count <<- 0
print(flag)
}
### GetBmi 請複製您於practice_1.R的function GetBmi
GetBmi <- function (my.height.cm, my.weight.kg) {
# Create my.height.m by my.height.cm
my.height.m <- my.height.cm / 100
# Create my.bmi with BMI(Body Mass Index) formula
my.bmi <- my.weight.kg / my.height.m^2
# Return my.bmi
return (my.bmi)
}
### Part I - 讀取資料與查看資料框內容 ##############################################
# 使用read.table()讀取test_data.csv
# 請注意sep, header的用途, 以及stringsAsFactors = F的影響
getwd()
df <- read.table('test_data.csv', sep = ',', header = T, stringsAsFactors = F)
### Part I - 讀取資料與查看資料框內容 ##############################################
# 使用read.table()讀取test_data.csv
# 請注意sep, header的用途, 以及stringsAsFactors = F的影響
getwd()
df <- read.table('test_data.csv', sep = ',', header = T, stringsAsFactors = F)
a <- 1
knitr::opts_chunk$set(echo = TRUE)
library(NLP)
library(tm)
library(tm)
library(jiebaRD)
library(jiebaRD)
library(jiebaR)
library(RColorBrewer)
library(wordcloud)
library(wordcloud2)
library(corpus)
getwd()
filenames <- list.files(getwd(), pattern="*.txt")
files <- lapply(filenames, readLines)
docs <- Corpus(VectorSource(files))
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))}
)
docs <- tm_map(docs,toSpace,"V1")
docs <- tm_map(docs,toSpace, "1")
docs <- tm_map(docs,toSpace, "了")
docs <- tm_map(docs,toSpace, "時")
docs <- tm_map(docs,toSpace, "為")
docs <- tm_map(docs,toSpace, "在")
docs <- tm_map(docs,toSpace, "有")
docs <- tm_map(docs,toSpace, "但")
docs <- tm_map(docs,toSpace, "都")
docs <- tm_map(docs,toSpace, "讓")
docs <- tm_map(docs,toSpace, "[A-Za-z0-9]")
#移除標點符號 (punctuation)
#移除數字 (digits)、空白 (white space)
docs <- tm_map(docs, removePunctuation)
#移除標點符號 (punctuation)
#移除數字 (digits)、空白 (white space)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
mixseg = worker()
jieba_tokenizer=function(d){
unlist(segment(d[[1]],mixseg))
}
font_family <- par("family") # the previous font family
# par(family = "黑體-繁 中黑") # change to a nice Chinese font
seg = lapply(docs, jieba_tokenizer)
freqFrame = as.data.frame(table(unlist(seg)))
#畫出文字雲
wordcloud2(data = freqFrame, size=0.5)
docs
typeof(docs)
typeof(freqFrame)
head(freqFrame)
newdata <- freqFrame[order(Freq),]
newdata <- freqFrame[order(freqFrame$Freq),]
newdata
newdata <- freqFrame[order(-freqFrame$Freq),]
newdata
#畫出文字雲
wordcloud2(data = newdata, size=0.5)
newdata[freqFrame$Freq >= 2]
newdata[newdata$Freq >= 2]
a
newdata
newdata[newdata$Freq >= 2]
newdata
newdata[newdata$Freq >=2]
newdata[newdata$Freq]
newdata[newdata$Freq == 1]
newdata[newdata$Freq == 1, ]
newdata[newdata$Freq >= 3, ]
#畫出文字雲
wordcloud2(data = newdata, size=0.5)
selected.data = newdata[newdata$Freq >= 3, ]
#畫出文字雲
wordcloud2(data = selected.data, size=0.5)
install.packages(hflights)
install.packages("hflights")
hflights
library(hflights)
hflights
hflights <- tdl_df(hflights)
hflights <- tbl_df(hflights)
library(dplyr)
hflights <- tbl_df(hflights)
hflights
shiny::runApp('Documents/大二下/資料科學程式設計-蔡芸琤 /106-2RSampleCode/shiny_app')
